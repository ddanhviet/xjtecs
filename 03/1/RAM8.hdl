// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/1/RAM8.hdl

/**
 * Memory of 8 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM8[address(t)](t)
 *     Write: If load(t-1) then RAM8[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load=1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM8 {

    IN  in[16], load, address[3];
    OUT out[16];

    PARTS:
		 DMux8Way16(in=in, sel=address, a=a, b=b, c=c, d=d, e=e, f=f, g=g, h=h);
		 
		 And(a=load, b=true, out=l);
		 DMux8Way(in=l, sel=address, a=al, b=bl, c=cl, d=dl, e=el, f=fl, g=gl, h=hl);

     Register(in=a, load=al, out=ao);
     Register(in=b, load=bl, out=bo);
		 Register(in=c, load=cl, out=co);
		 Register(in=d, load=dl, out=do);
		 Register(in=e, load=el, out=eo);
		 Register(in=f, load=fl, out=fo);
		 Register(in=g, load=gl, out=go);
		 Register(in=h, load=hl, out=ho);
		 
		 Mux8Way16(a=ao, b=bo, c=co, d=do, e=eo, f=fo, g=go, h=ho, sel=address, out=out);
		 
}
